{"version":3,"file":"react-native-media-controls.esm.js","sources":["../src/MediaControls.style.ts","../src/constants/playerStates.ts","../src/Images.tsx","../src/Controls.tsx","../src/utils.ts","../src/Slider.tsx","../src/Toolbar.tsx","../src/MediaControls.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst containerBackgroundColor = \"rgba(45, 59, 62, 0.0)\";\nconst playButtonBorderColor = \"rgba(255,255,255,0.0)\";\nconst white = \"#fff\";\n\nexport default StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: containerBackgroundColor,\n    bottom: 0,\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    left: 0,\n    paddingHorizontal: 20,\n    paddingVertical: 13,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n  controlsRow: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  fullScreenContainer: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    justifyContent: \"center\",\n    paddingLeft: 20,\n  },\n  playButton: {\n    alignItems: \"center\",\n    borderColor: playButtonBorderColor,\n    borderRadius: 50,\n    borderWidth: 0,\n    height: 50,\n    justifyContent: \"center\",\n    width: 50,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  playIcon: {\n    height: 22,\n    resizeMode: \"contain\",\n    width: 22,\n  },\n  progressColumnContainer: {\n    flex: 1,\n  },\n  progressContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginBottom: -25,\n  },\n  progressSlider: {\n    alignSelf: \"stretch\",\n  },\n  replayIcon: {\n    height: 20,\n    resizeMode: \"stretch\",\n    width: 25,\n  },\n  thumb: {\n    backgroundColor: white,\n    borderRadius: 50,\n    borderWidth: 3,\n    height: 20,\n    width: 20,\n  },\n  timeRow: {\n    alignSelf: \"stretch\",\n  },\n  timerLabel: {\n    color: white,\n    fontSize: 12,\n    fontFamily: \"Muli\",\n  },\n  timerLabelsContainer: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: -7,\n  },\n  toolbar: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  toolbarRow: {\n    alignItems: \"flex-start\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n  },\n  track: {\n    borderRadius: 1,\n    height: 2,\n  },\n});\n","enum PLAYER_STATES {\n  PLAYING = 0,\n  PAUSED = 1,\n  ENDED = 2,\n}\n\nexport { PLAYER_STATES };\n","const images = {\n  playIcon: require(\"./assets/ic_play.png\"),\n  pauseIcon: require(\"./assets/ic_pause.png\"),\n  replayIcon: require(\"./assets/ic_replay.png\"),\n};\n\nexport default images;\n","import React from \"react\";\nimport { TouchableOpacity, View, ActivityIndicator, Image } from \"react-native\";\nimport styles from \"./MediaControls.style\";\nimport { Props } from \"./MediaControls\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\n\nimport images from \"./Images\";\n\ntype ControlsProps = Pick<\n  Props,\n  \"isLoading\" | \"mainColor\" | \"playerState\" | \"onReplay\"\n> & {\n  onPause: () => void;\n};\n\nconst Controls = (props: ControlsProps) => {\n  const { isLoading, mainColor, playerState, onReplay, onPause } = props;\n  const pressAction = playerState === PLAYER_STATES.ENDED ? onReplay : onPause;\n\n  const replayIcon = images.replayIcon;\n  const icon = () => {\n    switch (playerState) {\n      case PLAYER_STATES.PAUSED:\n        return images.playIcon;\n      case PLAYER_STATES.PLAYING:\n        return images.pauseIcon;\n      case PLAYER_STATES.ENDED:\n        return replayIcon;\n      default:\n        return images.playIcon;\n    }\n  };\n\n  const content = isLoading ? (\n    <ActivityIndicator size=\"large\" color=\"#FFF\" />\n  ) : (\n    <TouchableOpacity\n      style={[styles.playButton, { backgroundColor: mainColor }]}\n      onPress={pressAction}\n      activeOpacity={0}\n    >\n      <Image source={icon()} style={styles.playIcon} />\n    </TouchableOpacity>\n  );\n\n  return <View style={[styles.controlsRow]}>{content}</View>;\n};\n\nexport { Controls };\n","import { PLAYER_STATES } from \"./constants/playerStates\";\n\nexport const humanizeVideoDuration = (seconds: number) => {\n  const [begin, end] = seconds >= 3600 ? [11, 8] : [14, 5];\n  const date = new Date(0);\n\n  date.setSeconds(seconds);\n  return date.toISOString().substr(begin, end);\n};\n\nexport const noop = () => {};\n\nexport const getPlayerStateIcon = (playerState: PLAYER_STATES) => {\n  switch (playerState) {\n    case PLAYER_STATES.PAUSED:\n      return require(\"./assets/ic_play.png\");\n    case PLAYER_STATES.PLAYING:\n      return require(\"./assets/ic_pause.png\");\n    case PLAYER_STATES.ENDED:\n      return require(\"./assets/ic_replay.png\");\n    default:\n      return null;\n  }\n};\n","import React from \"react\";\nimport { TouchableOpacity, View, Text, Image, ViewStyle } from \"react-native\";\nimport RNSlider from \"react-native-slider\";\nimport styles from \"./MediaControls.style\";\nimport { humanizeVideoDuration } from \"./utils\";\nimport { Props as MediaControlsProps } from \"./MediaControls\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\n\nexport type CustomSliderStyle = {\n  containerStyle: ViewStyle;\n  trackStyle: ViewStyle;\n  thumbStyle: ViewStyle;\n};\n\ntype Props = Pick<\n  MediaControlsProps,\n  | \"progress\"\n  | \"duration\"\n  | \"mainColor\"\n  | \"onFullScreen\"\n  | \"playerState\"\n  | \"onSeek\"\n  | \"onSeeking\"\n> & {\n  onPause: () => void;\n  customSliderStyle?: CustomSliderStyle;\n};\n\nconst fullScreenImage = require(\"./assets/ic_fullscreen.png\");\n\nconst Slider = (props: Props) => {\n  const {\n    customSliderStyle,\n    duration,\n    mainColor,\n    onFullScreen,\n    onPause,\n    progress,\n  } = props;\n\n  const containerStyle = customSliderStyle?.containerStyle || {};\n  const customTrackStyle = customSliderStyle?.trackStyle || {};\n  const customThumbStyle = customSliderStyle?.thumbStyle || {};\n\n  const dragging = (value: number) => {\n    const { onSeeking, playerState } = props;\n    onSeeking(value);\n\n    if (playerState === PLAYER_STATES.PAUSED) {\n      return;\n    }\n\n    onPause();\n  };\n\n  const seekVideo = (value: number) => {\n    props.onSeek(value);\n    onPause();\n  };\n\n  return (\n    <View\n      style={[styles.controlsRow, styles.progressContainer, containerStyle]}\n    >\n      <View style={styles.progressColumnContainer}>\n        <View style={[styles.timerLabelsContainer]}>\n          <Text style={styles.timerLabel}>\n            {humanizeVideoDuration(progress)}\n          </Text>\n          <Text style={styles.timerLabel}>\n            {humanizeVideoDuration(duration)}\n          </Text>\n        </View>\n        <RNSlider\n          style={[styles.progressSlider]}\n          onValueChange={dragging}\n          onSlidingComplete={seekVideo}\n          maximumValue={Math.floor(duration)}\n          value={Math.floor(progress)}\n          trackStyle={[styles.track, customTrackStyle]}\n          thumbStyle={[\n            styles.thumb,\n            customThumbStyle,\n            { borderColor: mainColor },\n          ]}\n          minimumTrackTintColor={mainColor}\n        />\n      </View>\n      {Boolean(onFullScreen) && (\n        <TouchableOpacity\n          style={styles.fullScreenContainer}\n          onPress={onFullScreen}\n        >\n          <Image source={fullScreenImage} />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nexport { Slider };\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Toolbar = ({ children }: Props) => <>{children}</>;\n\nexport { Toolbar };\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  GestureResponderEvent,\n  ViewStyle,\n} from \"react-native\";\nimport styles from \"./MediaControls.style\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\nimport { Controls } from \"./Controls\";\nimport { Slider, CustomSliderStyle } from \"./Slider\";\nimport { Toolbar } from \"./Toolbar\";\n\nexport type Props = {\n  children: React.ReactNode;\n  containerStyle: ViewStyle;\n  duration: number;\n  fadeOutDelay?: number;\n  isFullScreen: boolean;\n  isLoading: boolean;\n  mainColor: string;\n  onFullScreen?: (event: GestureResponderEvent) => void;\n  onPaused: (playerState: PLAYER_STATES) => void;\n  onReplay: () => void;\n  onSeek: (value: number) => void;\n  onSeeking: (value: number) => void;\n  playerState: PLAYER_STATES;\n  progress: number;\n  showOnStart?: boolean;\n  sliderStyle: CustomSliderStyle;\n  toolbarStyle: ViewStyle;\n};\n\nconst MediaControls = (props: Props) => {\n  const {\n    children,\n    containerStyle: customContainerStyle = {},\n    duration,\n    fadeOutDelay = 5000,\n    isLoading = false,\n    mainColor = \"rgba(12, 83, 175, 0.9)\",\n    onFullScreen,\n    onReplay: onReplayCallback,\n    onSeek,\n    onSeeking,\n    playerState,\n    progress,\n    showOnStart = true,\n    sliderStyle, // defaults are applied in Slider.tsx\n    toolbarStyle: customToolbarStyle = {},\n  } = props;\n  const { initialOpacity, initialIsVisible } = (() => {\n    if (showOnStart) {\n      return {\n        initialOpacity: 1,\n        initialIsVisible: true,\n      };\n    }\n\n    return {\n      initialOpacity: 0,\n      initialIsVisible: false,\n    };\n  })();\n\n  const [opacity] = useState(new Animated.Value(initialOpacity));\n  const [isVisible, setIsVisible] = useState(initialIsVisible);\n\n  const fadeOutControls = (delay = 0) => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 300,\n      delay,\n      useNativeDriver: false,\n    }).start(result => {\n      /* I noticed that the callback is called twice, when it is invoked and when it completely finished\n      This prevents some flickering */\n      if (result.finished) {\n        setIsVisible(false);\n      }\n    });\n  };\n\n  const fadeInControls = (loop = true) => {\n    setIsVisible(true);\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 300,\n      delay: 0,\n      useNativeDriver: false,\n    }).start(() => {\n      if (loop) {\n        fadeOutControls(fadeOutDelay);\n      }\n    });\n  };\n\n  const onReplay = () => {\n    fadeOutControls(fadeOutDelay);\n    onReplayCallback();\n  };\n\n  const cancelAnimation = () => opacity.stopAnimation(() => setIsVisible(true));\n\n  const onPause = () => {\n    const { playerState, onPaused } = props;\n    const { PLAYING, PAUSED, ENDED } = PLAYER_STATES;\n    switch (playerState) {\n      case PLAYING: {\n        cancelAnimation();\n        break;\n      }\n      case PAUSED: {\n        fadeOutControls(fadeOutDelay);\n        break;\n      }\n      case ENDED:\n        break;\n    }\n\n    const newPlayerState = playerState === PLAYING ? PAUSED : PLAYING;\n    return onPaused(newPlayerState);\n  };\n\n  const toggleControls = () => {\n    // value is the last value of the animation when stop animation was called.\n    // As this is an opacity effect, I (Charlie) used the value (0 or 1) as a boolean\n    opacity.stopAnimation((value: number) => {\n      setIsVisible(!!value);\n      return value ? fadeOutControls() : fadeInControls();\n    });\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={toggleControls}>\n      <Animated.View style={[styles.container, { opacity }]}>\n        {isVisible && (\n          <View style={[styles.container, customContainerStyle]}>\n            <View\n              style={[\n                styles.controlsRow,\n                styles.toolbarRow,\n                customToolbarStyle,\n              ]}\n            >\n              {children}\n            </View>\n            <Controls\n              onPause={onPause}\n              onReplay={onReplay}\n              isLoading={isLoading}\n              mainColor={\"#3366FF\"}\n              playerState={playerState}\n            />\n            <Slider\n              progress={progress}\n              duration={duration}\n              mainColor={mainColor}\n              onFullScreen={onFullScreen}\n              playerState={playerState}\n              onSeek={onSeek}\n              onSeeking={onSeeking}\n              onPause={onPause}\n              customSliderStyle={sliderStyle}\n            />\n          </View>\n        )}\n      </Animated.View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nMediaControls.Toolbar = Toolbar;\n\nexport default MediaControls;\n"],"names":["containerBackgroundColor","playButtonBorderColor","white","StyleSheet","create","container","alignItems","backgroundColor","bottom","flex","flexDirection","justifyContent","left","paddingHorizontal","paddingVertical","position","right","top","controlsRow","alignSelf","fullScreenContainer","paddingLeft","playButton","borderColor","borderRadius","borderWidth","height","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","playIcon","resizeMode","progressColumnContainer","progressContainer","marginBottom","progressSlider","replayIcon","thumb","timeRow","timerLabel","color","fontSize","fontFamily","timerLabelsContainer","toolbar","toolbarRow","track","PLAYER_STATES","images","require","pauseIcon","Controls","props","isLoading","mainColor","playerState","onReplay","onPause","pressAction","ENDED","icon","PAUSED","PLAYING","content","React","ActivityIndicator","size","TouchableOpacity","style","styles","onPress","activeOpacity","Image","source","View","humanizeVideoDuration","seconds","begin","end","date","Date","setSeconds","toISOString","substr","fullScreenImage","Slider","customSliderStyle","duration","onFullScreen","progress","containerStyle","customTrackStyle","trackStyle","customThumbStyle","thumbStyle","dragging","value","onSeeking","seekVideo","onSeek","Text","RNSlider","onValueChange","onSlidingComplete","maximumValue","Math","floor","minimumTrackTintColor","Boolean","Toolbar","children","MediaControls","customContainerStyle","fadeOutDelay","onReplayCallback","showOnStart","sliderStyle","toolbarStyle","customToolbarStyle","initialOpacity","initialIsVisible","useState","Animated","Value","opacity","isVisible","setIsVisible","fadeOutControls","delay","timing","toValue","useNativeDriver","start","result","finished","fadeInControls","loop","cancelAnimation","stopAnimation","onPaused","newPlayerState","toggleControls","TouchableWithoutFeedback"],"mappings":";;;;AAEA,IAAMA,wBAAwB,GAAG,uBAAjC;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,KAAK,GAAG,MAAd;AAEA,0BAAeC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,eAAe,EAAEP,wBAFR;AAGTQ,IAAAA,MAAM,EAAE,CAHC;AAITC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,aAAa,EAAE,QALN;AAMTC,IAAAA,cAAc,EAAE,eANP;AAOTC,IAAAA,IAAI,EAAE,CAPG;AAQTC,IAAAA,iBAAiB,EAAE,EARV;AASTC,IAAAA,eAAe,EAAE,EATR;AAUTC,IAAAA,QAAQ,EAAE,UAVD;AAWTC,IAAAA,KAAK,EAAE,CAXE;AAYTC,IAAAA,GAAG,EAAE;AAZI,GADoB;AAe/BC,EAAAA,WAAW,EAAE;AACXZ,IAAAA,UAAU,EAAE,QADD;AAEXa,IAAAA,SAAS,EAAE,SAFA;AAGXV,IAAAA,IAAI,EAAE,CAHK;AAIXE,IAAAA,cAAc,EAAE;AAJL,GAfkB;AAqB/BS,EAAAA,mBAAmB,EAAE;AACnBd,IAAAA,UAAU,EAAE,QADO;AAEnBa,IAAAA,SAAS,EAAE,SAFQ;AAGnBR,IAAAA,cAAc,EAAE,QAHG;AAInBU,IAAAA,WAAW,EAAE;AAJM,GArBU;AA2B/BC,EAAAA,UAAU,EAAE;AACVhB,IAAAA,UAAU,EAAE,QADF;AAEViB,IAAAA,WAAW,EAAEtB,qBAFH;AAGVuB,IAAAA,YAAY,EAAE,EAHJ;AAIVC,IAAAA,WAAW,EAAE,CAJH;AAKVC,IAAAA,MAAM,EAAE,EALE;AAMVf,IAAAA,cAAc,EAAE,QANN;AAOVgB,IAAAA,KAAK,EAAE,EAPG;AAQVC,IAAAA,WAAW,EAAE,MARH;AASVC,IAAAA,YAAY,EAAE;AACZF,MAAAA,KAAK,EAAE,CADK;AAEZD,MAAAA,MAAM,EAAE;AAFI,KATJ;AAaVI,IAAAA,aAAa,EAAE,IAbL;AAcVC,IAAAA,YAAY,EAAE,IAdJ;AAeVC,IAAAA,SAAS,EAAE;AAfD,GA3BmB;AA4C/BC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,MAAM,EAAE,EADA;AAERQ,IAAAA,UAAU,EAAE,SAFJ;AAGRP,IAAAA,KAAK,EAAE;AAHC,GA5CqB;AAiD/BQ,EAAAA,uBAAuB,EAAE;AACvB1B,IAAAA,IAAI,EAAE;AADiB,GAjDM;AAoD/B2B,EAAAA,iBAAiB,EAAE;AACjB1B,IAAAA,aAAa,EAAE,KADE;AAEjBC,IAAAA,cAAc,EAAE,UAFC;AAGjB0B,IAAAA,YAAY,EAAE,CAAC;AAHE,GApDY;AAyD/BC,EAAAA,cAAc,EAAE;AACdnB,IAAAA,SAAS,EAAE;AADG,GAzDe;AA4D/BoB,EAAAA,UAAU,EAAE;AACVb,IAAAA,MAAM,EAAE,EADE;AAEVQ,IAAAA,UAAU,EAAE,SAFF;AAGVP,IAAAA,KAAK,EAAE;AAHG,GA5DmB;AAiE/Ba,EAAAA,KAAK,EAAE;AACLjC,IAAAA,eAAe,EAAEL,KADZ;AAELsB,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,KAAK,EAAE;AALF,GAjEwB;AAwE/Bc,EAAAA,OAAO,EAAE;AACPtB,IAAAA,SAAS,EAAE;AADJ,GAxEsB;AA2E/BuB,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEzC,KADG;AAEV0C,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE;AAHF,GA3EmB;AAgF/BC,EAAAA,oBAAoB,EAAE;AACpB3B,IAAAA,SAAS,EAAE,SADS;AAEpBT,IAAAA,aAAa,EAAE,KAFK;AAGpBC,IAAAA,cAAc,EAAE,eAHI;AAIpB0B,IAAAA,YAAY,EAAE,CAAC;AAJK,GAhFS;AAsF/BU,EAAAA,OAAO,EAAE;AACPrC,IAAAA,aAAa,EAAE,KADR;AAEPD,IAAAA,IAAI,EAAE,CAFC;AAGPE,IAAAA,cAAc,EAAE;AAHT,GAtFsB;AA2F/BqC,EAAAA,UAAU,EAAE;AACV1C,IAAAA,UAAU,EAAE,YADF;AAEVI,IAAAA,aAAa,EAAE,KAFL;AAGVC,IAAAA,cAAc,EAAE;AAHN,GA3FmB;AAgG/BsC,EAAAA,KAAK,EAAE;AACLzB,IAAAA,YAAY,EAAE,CADT;AAELE,IAAAA,MAAM,EAAE;AAFH;AAhGwB,CAAlB,CAAf;;ICNKwB,aAAL;;AAAA,WAAKA;AACHA,EAAAA,2CAAA,YAAA;AACAA,EAAAA,0CAAA,WAAA;AACAA,EAAAA,yCAAA,UAAA;AACD,CAJD,EAAKA,aAAa,KAAbA,aAAa,KAAA,CAAlB;;ACAA,IAAMC,MAAM,GAAG;AACblB,EAAAA,QAAQ,eAAEmB,OAAO,CAAC,sBAAD,CADJ;AAEbC,EAAAA,SAAS,eAAED,OAAO,CAAC,uBAAD,CAFL;AAGbb,EAAAA,UAAU,eAAEa,OAAO,CAAC,wBAAD;AAHN,CAAf;;ACeA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;MACPC,YAAyDD,MAAzDC;MAAWC,YAA8CF,MAA9CE;MAAWC,cAAmCH,MAAnCG;MAAaC,WAAsBJ,MAAtBI;MAAUC,UAAYL,MAAZK;AACrD,MAAMC,WAAW,GAAGH,WAAW,KAAKR,aAAa,CAACY,KAA9B,GAAsCH,QAAtC,GAAiDC,OAArE;AAEA,MAAMrB,UAAU,GAAGY,MAAM,CAACZ,UAA1B;;AACA,MAAMwB,IAAI,GAAG,SAAPA,IAAO;AACX,YAAQL,WAAR;AACE,WAAKR,aAAa,CAACc,MAAnB;AACE,eAAOb,MAAM,CAAClB,QAAd;;AACF,WAAKiB,aAAa,CAACe,OAAnB;AACE,eAAOd,MAAM,CAACE,SAAd;;AACF,WAAKH,aAAa,CAACY,KAAnB;AACE,eAAOvB,UAAP;;AACF;AACE,eAAOY,MAAM,CAAClB,QAAd;AARJ;AAUD,GAXD;;AAaA,MAAMiC,OAAO,GAAGV,SAAS,GACvBW,mBAAA,CAACC,iBAAD;AAAmBC,IAAAA,IAAI,EAAC;AAAQ1B,IAAAA,KAAK,EAAC;GAAtC,CADuB,GAGvBwB,mBAAA,CAACG,gBAAD;AACEC,IAAAA,KAAK,EAAE,CAACC,MAAM,CAAClD,UAAR,EAAoB;AAAEf,MAAAA,eAAe,EAAEkD;AAAnB,KAApB;AACPgB,IAAAA,OAAO,EAAEZ;AACTa,IAAAA,aAAa,EAAE;GAHjB,EAKEP,mBAAA,CAACQ,KAAD;AAAOC,IAAAA,MAAM,EAAEb,IAAI;AAAIQ,IAAAA,KAAK,EAAEC,MAAM,CAACvC;GAArC,CALF,CAHF;AAYA,SAAOkC,mBAAA,CAACU,IAAD;AAAMN,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACtD,WAAR;GAAb,EAAoCgD,OAApC,CAAP;AACD,CA/BD;;ACbO,IAAMY,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD;aACdA,OAAO,IAAI,IAAX,GAAkB,CAAC,EAAD,EAAK,CAAL,CAAlB,GAA4B,CAAC,EAAD,EAAK,CAAL;MAA1CC;MAAOC;;AACd,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAb;AAEAD,EAAAA,IAAI,CAACE,UAAL,CAAgBL,OAAhB;AACA,SAAOG,IAAI,CAACG,WAAL,GAAmBC,MAAnB,CAA0BN,KAA1B,EAAiCC,GAAjC,CAAP;AACD,CANM;;AC0BP,IAAMM,eAAe,gBAAGnC,OAAO,CAAC,4BAAD,CAA/B;;AAEA,IAAMoC,MAAM,GAAG,SAATA,MAAS,CAACjC,KAAD;MAEXkC,oBAMElC,MANFkC;MACAC,WAKEnC,MALFmC;MACAjC,YAIEF,MAJFE;MACAkC,eAGEpC,MAHFoC;MACA/B,UAEEL,MAFFK;MACAgC,WACErC,MADFqC;AAGF,MAAMC,cAAc,GAAG,CAAAJ,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEI,cAAnB,KAAqC,EAA5D;AACA,MAAMC,gBAAgB,GAAG,CAAAL,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEM,UAAnB,KAAiC,EAA1D;AACA,MAAMC,gBAAgB,GAAG,CAAAP,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEQ,UAAnB,KAAiC,EAA1D;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;QACPC,YAA2B7C,MAA3B6C;QAAW1C,cAAgBH,MAAhBG;AACnB0C,IAAAA,SAAS,CAACD,KAAD,CAAT;;AAEA,QAAIzC,WAAW,KAAKR,aAAa,CAACc,MAAlC,EAA0C;AACxC;AACD;;AAEDJ,IAAAA,OAAO;AACR,GATD;;AAWA,MAAMyC,SAAS,GAAG,SAAZA,SAAY,CAACF,KAAD;AAChB5C,IAAAA,KAAK,CAAC+C,MAAN,CAAaH,KAAb;AACAvC,IAAAA,OAAO;AACR,GAHD;;AAKA,SACEO,mBAAA,CAACU,IAAD;AACEN,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACtD,WAAR,EAAqBsD,MAAM,CAACpC,iBAA5B,EAA+CyD,cAA/C;GADT,EAGE1B,mBAAA,CAACU,IAAD;AAAMN,IAAAA,KAAK,EAAEC,MAAM,CAACrC;GAApB,EACEgC,mBAAA,CAACU,IAAD;AAAMN,IAAAA,KAAK,EAAE,CAACC,MAAM,CAAC1B,oBAAR;GAAb,EACEqB,mBAAA,CAACoC,IAAD;AAAMhC,IAAAA,KAAK,EAAEC,MAAM,CAAC9B;GAApB,EACGoC,qBAAqB,CAACc,QAAD,CADxB,CADF,EAIEzB,mBAAA,CAACoC,IAAD;AAAMhC,IAAAA,KAAK,EAAEC,MAAM,CAAC9B;GAApB,EACGoC,qBAAqB,CAACY,QAAD,CADxB,CAJF,CADF,EASEvB,mBAAA,CAACqC,QAAD;AACEjC,IAAAA,KAAK,EAAE,CAACC,MAAM,CAAClC,cAAR;AACPmE,IAAAA,aAAa,EAAEP;AACfQ,IAAAA,iBAAiB,EAAEL;AACnBM,IAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAWnB,QAAX;AACdS,IAAAA,KAAK,EAAES,IAAI,CAACC,KAAL,CAAWjB,QAAX;AACPG,IAAAA,UAAU,EAAE,CAACvB,MAAM,CAACvB,KAAR,EAAe6C,gBAAf;AACZG,IAAAA,UAAU,EAAE,CACVzB,MAAM,CAAChC,KADG,EAEVwD,gBAFU,EAGV;AAAEzE,MAAAA,WAAW,EAAEkC;AAAf,KAHU;AAKZqD,IAAAA,qBAAqB,EAAErD;GAZzB,CATF,CAHF,EA2BGsD,OAAO,CAACpB,YAAD,CAAP,IACCxB,mBAAA,CAACG,gBAAD;AACEC,IAAAA,KAAK,EAAEC,MAAM,CAACpD;AACdqD,IAAAA,OAAO,EAAEkB;GAFX,EAIExB,mBAAA,CAACQ,KAAD;AAAOC,IAAAA,MAAM,EAAEW;GAAf,CAJF,CA5BJ,CADF;AAsCD,CApED;;ACxBA,IAAMyB,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAyB9C,mBAAA,eAAA,MAAA,EAAG8C,QAAH,CAAzB;AAAA,CAAhB;;AC4BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAC3D,KAAD;MAElB0D,WAeE1D,MAfF0D;8BAeE1D,MAdFsC;MAAgBsB,0DAAuB;MACvCzB,WAaEnC,MAbFmC;4BAaEnC,MAZF6D;MAAAA,gDAAe;yBAYb7D,MAXFC;MAAAA,0CAAY;yBAWVD,MAVFE;MAAAA,0CAAY;MACZkC,eASEpC,MATFoC;MACU0B,mBAQR9D,MARFI;MACA2C,SAOE/C,MAPF+C;MACAF,YAME7C,MANF6C;MACA1C,cAKEH,MALFG;MACAkC,WAIErC,MAJFqC;2BAIErC,MAHF+D;MAAAA,8CAAc;MACdC,cAEEhE,MAFFgE;4BAEEhE,MADFiE;MAAcC,sDAAqB;;aAES;AAC5C,QAAIH,WAAJ,EAAiB;AACf,aAAO;AACLI,QAAAA,cAAc,EAAE,CADX;AAELC,QAAAA,gBAAgB,EAAE;AAFb,OAAP;AAID;;AAED,WAAO;AACLD,MAAAA,cAAc,EAAE,CADX;AAELC,MAAAA,gBAAgB,EAAE;AAFb,KAAP;AAID,GAZ4C;MAArCD,sBAAAA;MAAgBC,wBAAAA;;kBAcNC,QAAQ,CAAC,IAAIC,QAAQ,CAACC,KAAb,CAAmBJ,cAAnB,CAAD;MAAnBK;;mBAC2BH,QAAQ,CAACD,gBAAD;MAAnCK;MAAWC;;AAElB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;QAACA;AAAAA,MAAAA,QAAQ;;;AAC/BN,IAAAA,QAAQ,CAACO,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,MAAAA,OAAO,EAAE,CADc;AAEvB3C,MAAAA,QAAQ,EAAE,GAFa;AAGvByC,MAAAA,KAAK,EAALA,KAHuB;AAIvBG,MAAAA,eAAe,EAAE;AAJM,KAAzB,EAKGC,KALH,CAKS,UAAAC,MAAM;AACb;;AAEA,UAAIA,MAAM,CAACC,QAAX,EAAqB;AACnBR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAXD;AAYD,GAbD;;AAeA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;QAACA;AAAAA,MAAAA,OAAO;;;AAC7BV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,IAAAA,QAAQ,CAACO,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,MAAAA,OAAO,EAAE,CADc;AAEvB3C,MAAAA,QAAQ,EAAE,GAFa;AAGvByC,MAAAA,KAAK,EAAE,CAHgB;AAIvBG,MAAAA,eAAe,EAAE;AAJM,KAAzB,EAKGC,KALH,CAKS;AACP,UAAII,IAAJ,EAAU;AACRT,QAAAA,eAAe,CAACd,YAAD,CAAf;AACD;AACF,KATD;AAUD,GAZD;;AAcA,MAAMzD,QAAQ,GAAG,SAAXA,QAAW;AACfuE,IAAAA,eAAe,CAACd,YAAD,CAAf;AACAC,IAAAA,gBAAgB;AACjB,GAHD;;AAKA,MAAMuB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAMb,OAAO,CAACc,aAAR,CAAsB;AAAA,aAAMZ,YAAY,CAAC,IAAD,CAAlB;AAAA,KAAtB,CAAN;AAAA,GAAxB;;AAEA,MAAMrE,OAAO,GAAG,SAAVA,OAAU;QACNF,cAA0BH,MAA1BG;QAAaoF,WAAavF,MAAbuF;QACb7E,UAA2Bf,cAA3Be;QAASD,SAAkBd,cAAlBc;;AACjB,YAAQN,WAAR;AACE,WAAKO,OAAL;AAAc;AACZ2E,UAAAA,eAAe;AACf;AACD;;AACD,WAAK5E,MAAL;AAAa;AACXkE,UAAAA,eAAe,CAACd,YAAD,CAAf;AACA;AACD;AARH;;AAaA,QAAM2B,cAAc,GAAGrF,WAAW,KAAKO,OAAhB,GAA0BD,MAA1B,GAAmCC,OAA1D;AACA,WAAO6E,QAAQ,CAACC,cAAD,CAAf;AACD,GAlBD;;AAoBA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AACrB;AACA;AACAjB,IAAAA,OAAO,CAACc,aAAR,CAAsB,UAAC1C,KAAD;AACpB8B,MAAAA,YAAY,CAAC,CAAC,CAAC9B,KAAH,CAAZ;AACA,aAAOA,KAAK,GAAG+B,eAAe,EAAlB,GAAuBQ,cAAc,EAAjD;AACD,KAHD;AAID,GAPD;;AASA,SACEvE,mBAAA,CAAC8E,wBAAD;AAA0BxE,IAAAA,OAAO,EAAEuE;GAAnC,EACE7E,mBAAA,CAAC0D,QAAQ,CAAChD,IAAV;AAAeN,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACnE,SAAR,EAAmB;AAAE0H,MAAAA,OAAO,EAAPA;AAAF,KAAnB;GAAtB,EACGC,SAAS,IACR7D,mBAAA,CAACU,IAAD;AAAMN,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACnE,SAAR,EAAmB8G,oBAAnB;GAAb,EACEhD,mBAAA,CAACU,IAAD;AACEN,IAAAA,KAAK,EAAE,CACLC,MAAM,CAACtD,WADF,EAELsD,MAAM,CAACxB,UAFF,EAGLyE,kBAHK;GADT,EAOGR,QAPH,CADF,EAUE9C,mBAAA,CAACb,QAAD;AACEM,IAAAA,OAAO,EAAEA;AACTD,IAAAA,QAAQ,EAAEA;AACVH,IAAAA,SAAS,EAAEA;AACXC,IAAAA,SAAS,EAAE;AACXC,IAAAA,WAAW,EAAEA;GALf,CAVF,EAiBES,mBAAA,CAACqB,MAAD;AACEI,IAAAA,QAAQ,EAAEA;AACVF,IAAAA,QAAQ,EAAEA;AACVjC,IAAAA,SAAS,EAAEA;AACXkC,IAAAA,YAAY,EAAEA;AACdjC,IAAAA,WAAW,EAAEA;AACb4C,IAAAA,MAAM,EAAEA;AACRF,IAAAA,SAAS,EAAEA;AACXxC,IAAAA,OAAO,EAAEA;AACT6B,IAAAA,iBAAiB,EAAE8B;GATrB,CAjBF,CAFJ,CADF,CADF;AAqCD,CAzID;;AA2IAL,aAAa,CAACF,OAAd,GAAwBA,OAAxB;;;;;"}